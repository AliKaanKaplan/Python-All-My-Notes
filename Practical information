Pratik Bİlgiler
1-Yıldız Parametresi (*)
Örnek yazarak açıklayacağım

print(*”TBMM”,sep=”.”)

Yukarıdaki komutta Normalde tek bir parametre olarak yazdığımız TBMM parametresini başına yıldız koyunca,
tüm parametrelerin içerisindekileride dahil olmak üzere her harfi bir parametre olarak görüyor.
Yukarıdaki komutun çıktısı T.B.M.M olacaktır.Çoğunlukla print() ve diziler ile kullanılır.
Sayılar ile bu yıldızlı parametreyi kullanamıyoruz.

2-Ters Taksim (\)
Ters taksim yanındaki Tırnağı etkisiz hale getirmek için kullanılır.Çift tırnak veya tek tırnakla bir karekter dizisi yazarken
içerisinde bir adet tek tırnak veya çift tırnak kullanmamız gerektiğinde ters taksim ile beraberinde tırnağı sağ tarafına koyarak yazabiliriz.
Diğer bir özelliği ise Print komutunda Tek tırnak veya çift tırnakta tırnağı kapatmadan bir alt satıra inmek istediğimizde \ 
işaretini kullanarak aynı """ 3 tırnakda olduğu gibi bir alt satırdan karakter dizimize devam edebiliriz.

  Örneğin : >>> print('Yarın Adana\'ya gidiyorum.')     // bu satırın çıktısını aşağıya yazıyorum.
                Yarın Adana'ya gidiyorum.
                
            
            >>> print("\"book\" kelimesi Türkçede \"kitap\" anlamına gelir.")  // Gördüğümüz gibi çıktısı bi alt satırdadır.
                "book" kelimesi Türkçede "kitap" anlamına gelir.
                
                
            >>> print("Python 1990 yılında Guido van rossum \
            ... tarafından geliştirilmeye başlanmış, oldukça \
            ... güçlü ve yetenekli bir prgoramala dilidir.")   // buradaki amacı bi alt satıra geçirmek.
            
            Python 1990 yılında Guido van rossum tarafından geliştirilmeye başlanmış, oldukça güçlü ve 
            yetenekli bir prgoramala dilidir.
            
3- Satır Başı (\n)
Bu işaretin görevi bir alt satıra geçirmek.Satır başı karakterine ‘yeni satır karakteri’ dendiği de olur.

    Örneğin :>>> print("birinci satır\nikinci satır\nüçüncü satır") // Bu programın çıktısı aşağıdadır.
                birinci satır
                ikinci satır
                 üçüncü satır

    Şimdi şu örneğe dikkatlice bakın:
    
Diyelim ki bilgisayarınızın ‘C:\’ dizinindeki ‘nisan’ adlı bir klasörün içinde yer alan masraflar.txt
adlı bir dosyayı yazdığınız bir program içinde kullanmanız gerekiyor. Mesela bu dosyayı, tam
adresiyle birlikte kullanıcılarınıza göstermek istiyorsunuz.

>>> print("C:\nisan\masraflar.txt") // Çıktısı aşağıdadır.
C:
isan\masraflar.txt

Gördüğümüz gibi kaçış olarak algılayıp bi alt satıra indi.Bunu çözmenin iki yolu var.
1.si
>>> open("C:\\nisan\\masraflar") // 1 ters taksim yerine 2 ters taksim kullanmak yada 
2.si
>>> open("C:/nisan/masraflar")  // düz taksim kullanmaktır.

4-Sekme (\t)
Burada \t adlı kaçış dizisi, “abc” ifadesinden sonra sanki Tab (sekme) tuşuna basılmış gibi bir
etki oluşturarak “def” ifadesini sağa doğru itiyor.

  Örneğin : >>> print("abc\tdef") // çıktısı aşağıdadır.
                abc def
                
            
            >>> print("C:\nisan\masraflar\toplam_masraf.txt") // bir önceki konuda yaşadığımız problemin aynısı.
                C:
                isan\masraflar  oplam_masraf.txt
                
            
            Yine aynı şekilde ya 2 ters taksim yada 1 düz taksim kullanarak bu problemi çözebiliriz.
            
4-Aynı Satır Başı (\r)
Bu kaçış dizisi, bir karakter dizisinde aynı satırın en başına dönülmesini sağlar. Bu kaçış
dizisinin işlevini tanımına bakarak anlamak biraz zor olabilir. O yüzden dilerseniz bu kaçış
dizisinin ne işe yaradığını bir örnek üzerinde göstermeye çalışalım.

Örneğin : >>> print("Merhaba\rDünya")
              Dünyaba
              
         >>> print("C:\ülke\türkiye\iller\rize\nüfus.txt")
              izeülke   ürkiye\iller
              üfus.txt

5-Düşey Sekme (\v)
   
   Eğer \ işaretini ‘v’ harfiyle birlikte kullanırsak düşey sekme denen şeyi elde ederiz.
   
     örneğin : >>> print("düşey\vsekme")
                   düşey
                        sekme
              




               
